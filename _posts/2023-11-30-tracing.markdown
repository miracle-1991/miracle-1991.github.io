---
title: Tracing
date: 2023-11-30 12:00:00 +0800
categories: [observable]
tags: [apisix, tracing, backend]
author: miracle
mermaid: true
---

![threeIndicator](/assets/img/tracing/threeIndicate.png)

随着微服务的兴起，项目开始从大型的单体结构逐步演变成职责分明的多个微服务结构。微服务之间相互调用，网络通信频繁，这使得排查一个问题变得越发困难。
可观测系统是随之而来的一个产物，该系统可以监控整个微服务系统的各项业务、性能指标，对于一些异常情况可以快速告警；对于客户端发来的每一项请求，可以
记录响应过程中经过了哪些服务，每个服务的耗时等等。

可观测系统能让开发者从一个外部的、直观的视角看待微服务系统，从而更容易地掌控该系统。

可观测系统有三大指标需要搜集：

* trace: trace记录了请求被处理的整个过程，还记录了各个服务处理的耗时、异常等等，让我们对整个链路有直观的了解
* metric：可以实时显示服务的业务和性能指标，比如CPU、内存利用率、QPS、Latency等等，让我们可以从一个直观的、可视化的角度查看系统的状态，甚至，通过与告警系统相结合，我们可以及时获知系统的异常情况
* log: 系统日志、业务日志，记录服务的详细处理过程

链路追踪简介
链路追踪可以将一次分布式请求还原成调用链路进行展示，从展示的


![tracingExample](/assets/img/tracing/tracingExample.png)
